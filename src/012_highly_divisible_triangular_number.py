# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over 5 divisors.
#
# What is the value of the first triangle number to have over 500 divisors?

import time
import math


def find_number_of_divisors(num):
    counter = 0
    i = 1

    if num % 2 != 0 or num % 3 != 0 or num % 4 != 0 or num % 5 != 0:
        return 0

    while i <= num:
        if num % i == 0:
            counter += 1
        i += 1

    return counter


def get_first_triangle_over_x_divisors(number_of_divisors_to_pass):
    result = 0
    i = 1
    number_of_divisors = 0

    while number_of_divisors <= number_of_divisors_to_pass:
        result += i
        number_of_divisors = find_number_of_divisors(result)
        i += 1

    print(result)
    return result


# 1
def triangle(number_of_divisors, n):
    divisors_list = [1] * n

    for i in range(2, n):
        for j in range(i, n, i):
            divisors_list[j] += 1

        if i % 2 == 0:
            if divisors_list[i // 2] * divisors_list[i - 1] > number_of_divisors:
                return (i - 1) * i // 2
        else:
            if divisors_list[i] * divisors_list[(i - 1) // 2] > number_of_divisors:
                return i * (i - 1) // 2


# 2
def factor_count(number):
    count = 0
    i = 1
    small_n = math.sqrt(number)

    while i <= small_n:
        if number % i == 0:
            count += 2
        i += 1
    return count


def triangle_numbers(max_fact):
    index = 1
    tri = 1

    while True:
        index += 1
        tri = tri + index

        if factor_count(tri) > max_fact:
            break

    print(tri)
    return tri


def main():
    start = time.time()

    # get_first_triangle_over_x_divisors(500)
    # print(triangle(int(input()), (10 ** 5)))
    print(triangle(500, 100000))

    end = time.time()
    print('seconds: ' + (str(end - start)))

    start = time.time()

    # my_triangle(500)
    triangle_numbers(500)

    end = time.time()
    print('seconds: ' + (str(end - start)))


main()
